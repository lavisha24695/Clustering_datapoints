function [y,fval] = energy_minimisation(data, weight, data_neighbors)
   
    D = size(weight,2);
    N = size(data,1);
    % y = zeros(n,1);
    %Compute wij
    w = zeros(N,N);
    maxnbr = 0;
    for i = 1:1:N
        nbrs = data_neighbors{i};
        %w(i,i) = 1;
        for j = 1:1:size(nbrs,2)
            w(i,nbrs(j)) = exp(-1* sum(weight.*(data(i,:) - data(nbrs(j),:)).*(data(i,:) - data(nbrs(j),:))));
        end
    end
    fprintf('Computed w\n');
    %Computing thetai
    p = zeros(N,1);
    theta = zeros(N,1);
    for i = 1:1:N
       p(i) = sum(data(i,:).*weight);
    end
    [pmax, maxi] = max(p);
    [pmin, mini] = min(p);
    fprintf('Pmax: %d, Pmin: %d\n',pmax, pmin);
    for i = 1:1:N
       theta(i) = 0.5*(pmax + pmin - 2*p(i))/(pmax - pmin);
    end
    
    
    
    %y0 = randi([0 1], N,1);
    %f = @(y)fun1(y, theta, w, N);
    %[y, fval] = fminunc(f,y0, @mycon);
    %[y, fval] = fsolve(f,y0);
    
    
    
end